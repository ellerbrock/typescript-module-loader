{
  "name": "Typescript Module Loader",
  "tagline": "dynamically appends JS and CSS files to the document - thats it :-)",
  "body": "TypeScript Module Loader [![TypeScript](https://badges.frapsoft.com/typescript/code/typescript.png?v=100)](https://github.com/ellerbrock/typescript-badges/) [![Open Source Love](https://badges.frapsoft.com/os/v1/open-source.svg?v=102)](https://github.com/ellerbrock/open-source-badge/) [![Gitter Chat](https://badges.gitter.im/frapsoft/frapsoft.svg)](https://gitter.im/frapsoft/frapsoft/)\r\n====================================================================================================================================================================================================================================================================================================================================================================================================\r\n\r\nSmall script to append dynamically Javascript and CSS to the document.  \r\nI used this with Angular 1.x to load modules on runtime and append their Stylesheet definitions while developing.\r\n\r\nA better way to do this is to make use of Module Loaders & Bundler like [Webpack](https://github.com/webpack/webpack) for production.\r\n\r\n```javascript\r\n/**\r\n * @author        Maik Ellerbrock\r\n * @link          https://github.com/ellerbrock\r\n * @version       1.0.1\r\n * @license       MIT\r\n * @description   adds CSS files to Header and Javascript files to Footer\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n *  extract suffix from given filename\r\n *\r\n *  @param {string} fileName - to extract suffix\r\n *  @returns {string} - suffix\r\n */\r\nfunction getFileSuffix(fileName: string): string {\r\n  return fileName.substr(fileName.lastIndexOf('.') + 1).toLowerCase();\r\n}\r\n\r\n/**\r\n *  creates an link element and append href to it\r\n *\r\n *  @param {string} fileName - CSS filename\r\n *  @returns {HTMLLinkElement} - link element\r\n */\r\nfunction createLinkElement(fileName: string): HTMLLinkElement {\r\n  let eCSS = document.createElement('link');\r\n  eCSS.rel = \"stylesheet\";\r\n  eCSS.href = fileName;\r\n  return eCSS;\r\n}\r\n\r\n/**\r\n *  creates an script element and append src to it\r\n *\r\n *  @param {string} fileName - Javascript filename\r\n *  @returns {HTMLScriptElement} - script element\r\n */\r\nfunction createScriptElement(fileName: string): HTMLScriptElement {\r\n  let eJS = document.createElement('script');\r\n  eJS.src = fileName;\r\n  return eJS;\r\n}\r\n\r\n\r\n/**\r\n *  append JS / CSS files to the document (CSS => Head , JS => Footer)\r\n *\r\n * @param fileName - to attach\r\n * @param debug - write HTML comment for debugging / information\r\n * @returns {boolean}\r\n */\r\nfunction appendFiles(fileName: string, debug = false): boolean {\r\n  let fileType, eFile, eTarget, location;\r\n  fileType = getFileSuffix(fileName);\r\n\r\n  if (fileType === 'css') {\r\n    eFile = createLinkElement(fileName);\r\n    location = 'head';\r\n  }\r\n  else if (fileType === 'js') {\r\n    eFile = createScriptElement(fileName);\r\n    location = 'body';\r\n  }\r\n  else {\r\n    console.error('ERROR - filetype not valid! Supported formats: CSS / JS');\r\n    return false;\r\n  }\r\n\r\n  eTarget = document.getElementsByTagName(location)[0];\r\n\r\n  if (debug) {\r\n    let eComment = document.createComment(' dynamically added ' + fileType + ' file: ' + fileName + ' ');\r\n    eTarget.appendChild(eComment);\r\n  }\r\n\r\n  eTarget.appendChild(eFile);\r\n  return true;\r\n}\r\n```\r\nContact / Social Media\r\n======================\r\n\r\n*Get the latest News about Web Development, Open Source, Tooling, Server & Security*\r\n\r\n[![Twitter](https://github.frapsoft.com/social/twitter.png)](https://twitter.com/frapsoft/) [![Facebook](https://github.frapsoft.com/social/facebook.png)](https://www.facebook.com/frapsoft/) [![Google+](https://github.frapsoft.com/social/google-plus.png)](https://plus.google.com/116540931335841862774) [![Gitter](https://github.frapsoft.com/social/gitter.png)](https://gitter.im/frapsoft/frapsoft/) [![Github](https://github.frapsoft.com/social/github.png)](https://github.com/ellerbrock/)\r\n\r\nDevelopment by\r\n==============\r\n\r\nDeveloper / Author: [Maik Ellerbrock](https://github.com/ellerbrock/)<br> Company: [Frapsoft](https://github.com/frapsoft/)\r\n\r\n### License \r\n\r\nCopyright (c) 2016 [Maik Ellerbrock](https://github.com/ellerbrock/)  \r\n\r\n[![MIT Licence](https://badges.frapsoft.com/os/mit/mit-125x28.png?v=102)](https://opensource.org/licenses/mit-license.php)  \r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}